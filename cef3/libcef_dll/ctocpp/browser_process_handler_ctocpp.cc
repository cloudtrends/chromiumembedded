// Copyright (c) 2012 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/ctocpp/browser_process_handler_ctocpp.h"
#include "libcef_dll/ctocpp/proxy_handler_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

CefRefPtr<CefProxyHandler> CefBrowserProcessHandlerCToCpp::GetProxyHandler() {
  if (CEF_MEMBER_MISSING(struct_, get_proxy_handler))
    return NULL;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_proxy_handler_t* _retval = struct_->get_proxy_handler(struct_);

  // Return type: refptr_same
  return CefProxyHandlerCToCpp::Wrap(_retval);
}

void CefBrowserProcessHandlerCToCpp::OnContextInitialized() {
  if (CEF_MEMBER_MISSING(struct_, on_context_initialized))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  struct_->on_context_initialized(struct_);
}


#ifndef NDEBUG
template<> long CefCToCpp<CefBrowserProcessHandlerCToCpp,
    CefBrowserProcessHandler, cef_browser_process_handler_t>::DebugObjCt = 0;
#endif

