Index: webplugin_delegate_impl_win.cc
===================================================================
--- webplugin_delegate_impl_win.cc	(revision 237081)
+++ webplugin_delegate_impl_win.cc	(working copy)
@@ -88,8 +88,10 @@
 base::LazyInstance<base::win::IATPatchFunction> g_iat_patch_get_proc_address =
     LAZY_INSTANCE_INITIALIZER;
 
+#if defined(USE_AURA)
 base::LazyInstance<base::win::IATPatchFunction> g_iat_patch_window_from_point =
     LAZY_INSTANCE_INITIALIZER;
+#endif
 
 // http://crbug.com/16114
 // Enforces providing a valid device context in NPWindow, so that NPP_SetWindow
@@ -420,12 +422,14 @@
         GetProcAddressPatch);
   }
 
+#if defined(USE_AURA)
   if (windowless_ && !g_iat_patch_window_from_point.Pointer()->is_patched() &&
       (quirks_ & PLUGIN_QUIRK_FAKE_WINDOW_FROM_POINT)) {
     g_iat_patch_window_from_point.Pointer()->Patch(
         GetPluginPath().value().c_str(), "user32.dll", "WindowFromPoint",
         WebPluginDelegateImpl::WindowFromPointPatch);
   }
+#endif
 
   return true;
 }
@@ -447,8 +451,10 @@
   if (g_iat_patch_reg_enum_key_ex_w.Pointer()->is_patched())
     g_iat_patch_reg_enum_key_ex_w.Pointer()->Unpatch();
 
+#if defined(USE_AURA)
   if (g_iat_patch_window_from_point.Pointer()->is_patched())
     g_iat_patch_window_from_point.Pointer()->Unpatch();
+#endif
 
   if (mouse_hook_) {
     UnhookWindowsHookEx(mouse_hook_);
