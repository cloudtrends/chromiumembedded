diff --git common.gypi common.gypi
index f97bf66..116c7bc 100644
--- common.gypi
+++ common.gypi
@@ -9,6 +9,9 @@
   # Variables expected to be overriden on the GYP command line (-D) or by
   # ~/.gyp/include.gypi.
   'variables': {
+    # Directory for CEF source files. This will be set by cef.gypi.
+    'cef_directory%' : '',
+
     # Putting a variables dict inside another variables dict looks kind of
     # weird.  This is done so that 'host_arch', 'chromeos', etc are defined as
     # variables within the outer variables dict here.  This is necessary
@@ -5486,6 +5489,9 @@
           4510, # Default constructor could not be generated
           4512, # Assignment operator could not be generated
           4610, # Object can never be instantiated
+          # Disable Warning 4702 ("Unreachable code")
+          # https://code.google.com/p/chromium/issues/detail?id=346399#c55
+          4702,
         ],
         'msvs_settings': {
           'VCCLCompilerTool': {
diff --git gyp_chromium gyp_chromium
index ad2796b..1407d9c 100755
--- gyp_chromium
+++ gyp_chromium
@@ -269,12 +269,6 @@ if __name__ == '__main__':
   if sys.platform not in ('darwin',):
     args.append('--no-circular-check')
 
-  # We explicitly don't support the make gyp generator (crbug.com/348686). Be
-  # nice and fail here, rather than choking in gyp.
-  if re.search(r'(^|,|\s)make($|,|\s)', os.environ.get('GYP_GENERATORS', '')):
-    print 'Error: make gyp generator not supported (check GYP_GENERATORS).'
-    sys.exit(1)
-
   # If CHROMIUM_GYP_SYNTAX_CHECK is set to 1, it will invoke gyp with --check
   # to enfore syntax checking.
   syntax_check = os.environ.get('CHROMIUM_GYP_SYNTAX_CHECK')
diff --git mac/strip_save_dsym mac/strip_save_dsym
index c9cf226..0dedbe3 100755
--- mac/strip_save_dsym
+++ mac/strip_save_dsym
@@ -48,7 +48,7 @@ def macho_archs(macho):
                  "bundle"]
   macho_types_re = "Mach-O (?:64-bit )?(?:" + "|".join(macho_types) + ")"
 
-  file_cmd = subprocess.Popen(["/usr/bin/file", "-b", "--", macho],
+  file_cmd = subprocess.Popen(["/usr/bin/file", "-b", "-L", "--", macho],
                               stdout=subprocess.PIPE)
 
   archs = []
