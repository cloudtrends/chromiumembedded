// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/app_cpptoc.h"
#include "libcef_dll/cpptoc/proxy_handler_cpptoc.h"


// MEMBER FUNCTIONS - Body may be edited by hand.

cef_proxy_handler_t* CEF_CALLBACK app_get_proxy_handler(struct _cef_app_t* self)
{
  DCHECK(self);
  if (!self)
    return NULL;

  CefRefPtr<CefProxyHandler> handlerPtr =
      CefAppCppToC::Get(self)->GetProxyHandler();
  if(handlerPtr.get())
    return CefProxyHandlerCppToC::Wrap(handlerPtr);

  return NULL;
}


// CONSTRUCTOR - Do not edit by hand.

CefAppCppToC::CefAppCppToC(CefApp* cls)
    : CefCppToC<CefAppCppToC, CefApp, cef_app_t>(cls)
{
  struct_.struct_.get_proxy_handler = app_get_proxy_handler;
}

#ifndef NDEBUG
template<> long CefCppToC<CefAppCppToC, CefApp, cef_app_t>::DebugObjCt = 0;
#endif

