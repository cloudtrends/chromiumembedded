// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/storage_visitor_cpptoc.h"


// MEMBER FUNCTIONS - Body may be edited by hand.

int CEF_CALLBACK storage_visitor_visit(struct _cef_storage_visitor_t* self,
    enum cef_storage_type_t type, const cef_string_t* origin,
    const cef_string_t* key, const cef_string_t* value, int count, int total,
    int* deleteData)
{
  DCHECK(self);
  DCHECK(origin);
  DCHECK(deleteData);
  if (!self || !origin || !deleteData)
    return false;

  bool delVal = (*deleteData)?true:false;
  bool retVal = CefStorageVisitorCppToC::Get(self)->Visit(type, origin, key,
      value, count, total, delVal);
  *deleteData = delVal;

  return retVal;
}


// CONSTRUCTOR - Do not edit by hand.

CefStorageVisitorCppToC::CefStorageVisitorCppToC(CefStorageVisitor* cls)
    : CefCppToC<CefStorageVisitorCppToC, CefStorageVisitor,
        cef_storage_visitor_t>(cls)
{
  struct_.struct_.visit = storage_visitor_visit;
}

#ifndef NDEBUG
template<> long CefCppToC<CefStorageVisitorCppToC, CefStorageVisitor,
    cef_storage_visitor_t>::DebugObjCt = 0;
#endif

